openapi: '3.0.0'
info: 
  title: Linktree Clone Api
  version: '1.0.0'

servers:
  - url: http://localhost:8080/api

paths: 
  /auth/me: 
    get:
      summary: Authenticate the current user
      tags: 
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ApiResponse'

  /auth/register:
    post:
      summary: Register a user
      tags: 
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameEmailAndPassword'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ApiResponse'

  /auth/login: 
    post:
      summary: Login a potential user
      tags: 
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameAndPassword'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ApiResponse'

  /auth/logout:
    post:
      summary: Log out the current user
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ApiResponse'


security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UsernameAndPassword:
      type: object
      properties:
        username:
          type: string
          nullable: false
        password:
          type: string
          nullable: false
      required:
        - username
        - password
    UsernameEmailAndPassword:
      allOf:
        - $ref: '#/components/schemas/UsernameAndPassword'
        - type: object
          properties:
            email:
              type: string
              nullable: false
          required:
            - email
    User:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        username:
          type: string
          nullable: false
        email:
          type: string
          nullable: false
        roles:
          type: array
          items:
            type: string
      required:
        - id
        - username
        - email
        - roles
    JwtUser:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            accessToken:
              type: string
            tokenType:
              type: string
          required:
            - accessToken
            - tokenType
    Error: 
      type: object
      properties:
        errorCode:
          type: string
        message:
          type: string
        details:
          type: string
        timestamp:
          type: string
        httpStatus:
          type: string
    Message:
      type: object
      properties:
        message:
          type: string
      required: 
        - message
    ApiResponse:
      type: object
      properties:
        data:
          oneOf:
            - $ref: '#/components/schemas/User'
            - $ref: '#/components/schemas/JwtUser'
            - $ref: '#/components/schemas/Message'
          nullable: true
        error:
          $ref: '#/components/schemas/Error'
          nullable: true